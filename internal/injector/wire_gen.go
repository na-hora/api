// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/google/wire"
	"gorm.io/gorm"
	repositories11 "na-hora/api/internal/models/appointment/repositories"
	services11 "na-hora/api/internal/models/appointment/services"
	repositories5 "na-hora/api/internal/models/city/repositories"
	services5 "na-hora/api/internal/models/city/services"
	repositories12 "na-hora/api/internal/models/client/repositories"
	services12 "na-hora/api/internal/models/client/services"
	repositories7 "na-hora/api/internal/models/company-hour-block/repositories"
	services7 "na-hora/api/internal/models/company-hour-block/services"
	repositories6 "na-hora/api/internal/models/company-hour/repositories"
	services6 "na-hora/api/internal/models/company-hour/services"
	repositories9 "na-hora/api/internal/models/company-pet-hair/repositories"
	services9 "na-hora/api/internal/models/company-pet-hair/services"
	repositories10 "na-hora/api/internal/models/company-pet-size/repositories"
	services10 "na-hora/api/internal/models/company-pet-size/services"
	repositories13 "na-hora/api/internal/models/company-pet-type/repositories"
	services13 "na-hora/api/internal/models/company-pet-type/services"
	"na-hora/api/internal/models/company/repositories"
	"na-hora/api/internal/models/company/services"
	repositories8 "na-hora/api/internal/models/pet-service/repositories"
	services8 "na-hora/api/internal/models/pet-service/services"
	repositories4 "na-hora/api/internal/models/state/repositories"
	services4 "na-hora/api/internal/models/state/services"
	repositories3 "na-hora/api/internal/models/token/repositories"
	services3 "na-hora/api/internal/models/token/services"
	repositories2 "na-hora/api/internal/models/user/repositories"
	services2 "na-hora/api/internal/models/user/services"
)

// Injectors from wire.go:

func InitializeCompanyService(db *gorm.DB) services.CompanyServiceInterface {
	companyRepositoryInterface := repositories.GetCompanyRepository(db)
	companyServiceInterface := services.GetCompanyService(companyRepositoryInterface)
	return companyServiceInterface
}

func InitializeUserService(db *gorm.DB) services2.UserServiceInterface {
	userRepositoryInterface := repositories2.GetUserRepository(db)
	userServiceInterface := services2.GetUserService(userRepositoryInterface)
	return userServiceInterface
}

func InitializeTokenService(db *gorm.DB) services3.TokenServiceInterface {
	tokenRepositoryInterface := repositories3.GetTokenRepository(db)
	tokenServiceInterface := services3.GetTokenService(tokenRepositoryInterface)
	return tokenServiceInterface
}

func InitializeStateService(db *gorm.DB) services4.StateServiceInterface {
	stateRepositoryInterface := repositories4.GetStateRepository(db)
	stateServiceInterface := services4.GetStateService(stateRepositoryInterface)
	return stateServiceInterface
}

func InitializeCityService(db *gorm.DB) services5.CityServiceInterface {
	cityRepositoryInterface := repositories5.GetCityRepository(db)
	cityServiceInterface := services5.GetCityService(cityRepositoryInterface)
	return cityServiceInterface
}

func InitializeCompanyHourService(db *gorm.DB) services6.CompanyHourServiceInterface {
	companyHourRepositoryInterface := repositories6.GetCompanyHourRepository(db)
	companyHourServiceInterface := services6.GetCompanyHourService(companyHourRepositoryInterface)
	return companyHourServiceInterface
}

func InitializeCompanyHourBlockService(db *gorm.DB) services7.CompanyHourBlockServiceInterface {
	companyHourBlockRepositoryInterface := repositories7.GetCompanyHourBlockRepository(db)
	companyHourBlockServiceInterface := services7.GetCompanyHourBlockService(companyHourBlockRepositoryInterface)
	return companyHourBlockServiceInterface
}

func InitializePetServiceService(db *gorm.DB) services8.PetServiceServiceInterface {
	petServiceRepositoryInterface := repositories8.GetPetServiceRepository(db)
	petServiceServiceInterface := services8.GetPetServiceService(petServiceRepositoryInterface, db)
	return petServiceServiceInterface
}

func InitializeCompanyPetHairService(db *gorm.DB) services9.CompanyPetHairServiceInterface {
	companyPetHairRepositoryInterface := repositories9.GetCompanyPetHairRepository(db)
	companyPetHairServiceInterface := services9.GetCompanyPetHairService(companyPetHairRepositoryInterface)
	return companyPetHairServiceInterface
}

func InitializeCompanyPetSizeService(db *gorm.DB) services10.CompanyPetSizeServiceInterface {
	companyPetSizeRepositoryInterface := repositories10.GetCompanyPetSizeRepository(db)
	companyPetSizeServiceInterface := services10.GetCompanyPetSizeService(companyPetSizeRepositoryInterface)
	return companyPetSizeServiceInterface
}

func InitializeAppointmentService(db *gorm.DB) services11.AppointmentServiceInterface {
	appointmentRepositoryInterface := repositories11.GetAppointmentRepository(db)
	petServiceRepositoryInterface := repositories8.GetPetServiceRepository(db)
	appointmentServiceInterface := services11.GetAppointmentService(appointmentRepositoryInterface, petServiceRepositoryInterface)
	return appointmentServiceInterface
}

func InitializeClientService(db *gorm.DB) services12.ClientServiceInterface {
	clientRepositoryInterface := repositories12.GetClientRepository(db)
	clientServiceInterface := services12.GetClientService(clientRepositoryInterface)
	return clientServiceInterface
}

func InitializeCompanyPetTypeService(db *gorm.DB) services13.CompanyPetTypeServiceInterface {
	companyPetTypeRepositoryInterface := repositories13.GetCompanyPetTypeRepository(db)
	companyPetTypeServiceInterface := services13.GetCompanyPetTypeService(companyPetTypeRepositoryInterface)
	return companyPetTypeServiceInterface
}

// wire.go:

var CompanyServiceSet = wire.NewSet(repositories.GetCompanyRepository, services.GetCompanyService)

var UserServiceSet = wire.NewSet(repositories2.GetUserRepository, services2.GetUserService)

var TokenServiceSet = wire.NewSet(repositories3.GetTokenRepository, services3.GetTokenService)

var StateServiceSet = wire.NewSet(repositories4.GetStateRepository, services4.GetStateService)

var CityServiceSet = wire.NewSet(repositories5.GetCityRepository, services5.GetCityService)

var CompanyHourServiceSet = wire.NewSet(repositories6.GetCompanyHourRepository, services6.GetCompanyHourService)

var CompanyHourBlockServiceSet = wire.NewSet(repositories7.GetCompanyHourBlockRepository, services7.GetCompanyHourBlockService)

var PetServiceServiceSet = wire.NewSet(repositories8.GetPetServiceRepository, services8.GetPetServiceService)

var CompanyPetHairServiceSet = wire.NewSet(repositories9.GetCompanyPetHairRepository, services9.GetCompanyPetHairService)

var CompanyPetSizeServiceSet = wire.NewSet(repositories10.GetCompanyPetSizeRepository, services10.GetCompanyPetSizeService)

var AppointmentServiceSet = wire.NewSet(repositories8.GetPetServiceRepository, repositories11.GetAppointmentRepository, services11.GetAppointmentService)

var ClientServiceSet = wire.NewSet(repositories12.GetClientRepository, services12.GetClientService)

var CompanyPetTypeServiceSet = wire.NewSet(repositories13.GetCompanyPetTypeRepository, services13.GetCompanyPetTypeService)
